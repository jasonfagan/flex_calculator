<?xml version="1.0"?>
<mx:Application borderStyle="none"
                xmlns:mx="http://www.adobe.com/2006/mxml"
                creationPolicy="auto"
                applicationComplete="init();"
                styleName="plain">

    <mx:Script>
        <![CDATA[
            /*
             Really Simple Flash Calculator
             Copyright (C) 2009 Jason Fagan <jason.fagan@gmail.com>

             This program is free software: you can redistribute it and/or modify
             it under the terms of the GNU General Public License as published by
             the Free Software Foundation, either version 3 of the License, or
             (at your option) any later version.

             This program is distributed in the hope that it will be useful,
             but WITHOUT ANY WARRANTY; without even the implied warranty of
             MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
             GNU General Public License for more details.

             You should have received a copy of the GNU General Public License
             along with this program.  If not, see <http://www.gnu.org/licenses/>.
            */

            [Bindable]
            private var regDisplay:String;
            private var reg1:Number;
            private var reg2:Number;
            private var regMem:Number;
            private var regOp:String;
            private var isNewValue:Boolean;
            private var isError:Boolean;

            private function init():void {
                clearAll();

                calculation.maxWidth = calculation.width;
                    
                stage.addEventListener(KeyboardEvent.KEY_UP, keyActionHandler, false, 1);
            }

			private function getErrorText():String {
				switch (Capabilities.language) {
					case "de":
						return "Fehler";
						break;
					case "fr":
						return "Erreur";
						break;
					case "nl":
						return "Fout";
						break;
					default:
						return "Error";
						break;
				}
			}

            private function displayAnswer(answer:Number):void {
                if (!isNaN(answer) && isFinite(answer)) {
                    regDisplay = String(answer);
                } else {
                    calculation.text = getErrorText();
                    isError = true;
                }
            }

            private function keyActionHandler(event:KeyboardEvent):void {
                var action:String;

                if (event.keyCode == Keyboard.BACKSPACE) {
                    action = "U";
                } else if (event.keyCode == Keyboard.ENTER) {
                    action = "=";
                } else if (event.keyCode == Keyboard.ESCAPE) {
                    action = "C";
                } else {
                    action = String.fromCharCode(event.charCode).toUpperCase();
                }
                
                performAction(action);
            }
            
            private function clearAll():void
            {
                reg1 = 0.0;
                reg2 = 0.0;
                regMem = 0.0;
                regOp = null;
                displayAnswer(reg1);
                isNewValue = true;
                isError = false;
            }

            private function performAction(action:String):void
            {
                if ("C" == action) { // Clear all
                    clearAll();
                }
                
                if (isError) return;

                if ("U" == action) { // Undo
                    regDisplay = regDisplay.substr(0, regDisplay.length - 1);

                    if (regDisplay.length == 0) {
                        regDisplay = "0";
                    }
                } else if ("F" == action) { // Flip sign
                    if(regDisplay.substr(0, 1) == "-") {
                        regDisplay = regDisplay.substr(1, regDisplay.length)
                    } else {
                        regDisplay = "-" + regDisplay
                    }
                } else if ("0" == action || "1" == action || "2" == action
                       || "3" == action || "4" == action || "5" == action
                       || "6" == action || "7" == action || "8" == action
                       || "9" == action || "." == action) {

                    // Restrict to 30 numbers
                    if (!isNewValue && regDisplay.length >= 30) {
                        return;
                    }

                    if (isNewValue) {
                        regDisplay = action;
                    } else {
                        regDisplay = regDisplay + action;
                    }
                    
                    isNewValue = false;
                } else if ("+" == action || "-" == action
                       || "*" == action || "/"== action || 
						(regOp != null && "=" == action)) { // Operand
							
	                reg2 = Number(regDisplay);
					reg1 = calculate(regOp, reg1, reg2);
					regOp = "=" == action ? null : action;
					isNewValue = true;
                } else if ("MR" == action) { // Memory Read
                    displayAnswer(regMem);
                    isNewValue = true;
                } else if ("M+" == action) { // Memory Add
                    reg2 = Number(regDisplay);
                    reg1 = calculate(regOp, reg1, reg2);
                    regMem = regMem + reg1;
                    regOp = "";
                    isNewValue = true;
                } else if ("M-" == action) { // Memory Subtract
                    reg2 = Number(regDisplay);
                    reg1 = calculate(regOp, reg1, reg2);
                    regMem = regMem - reg1;
                    regOp = "";
                    isNewValue = true;
                } else if ("MC" == action) {
                    regMem = 0;
                    isNewValue = true;
                }

                setMemStatus();
            }

            private function setMemStatus():void {
                if (regMem != 0) {
                } else {
                }
            }

            private function calculate(regOp:String, reg1:Number, reg2:Number):Number
            {
				var answer:Number;
				
                if ("+" == regOp) {
                    reg1 = reg1 + reg2;
                } else if ("-" == regOp) {
                    reg1 = reg1 - reg2;
                } else if ("*" == regOp) {
                    reg1 = reg1 * reg2;
                } else if ("/" == regOp) {
                    if (reg1 == 0 && reg2 == 0) {
                        return 0;
                    }
                    reg1 = reg1 / reg2;
                } else { 
                    reg1 = reg2;
                }

                // Deal with floating point errors using a precision of 12 (old trick)
                var correction:Number = Math.pow(10, 12);
                answer = Math.round(correction * reg1) / correction;

				displayAnswer(answer);
                
				return answer;
            }
        ]]>
	</mx:Script>

    <mx:Panel title="Calculator"
              titleIcon="@Embed('images/Calculator.png')"
              height="265"
              width="235"
              paddingTop="5"
              paddingLeft="5"
              paddingRight="5"
              paddingBottom="5">

        <mx:Grid>
            <mx:GridRow>
                <mx:GridItem colSpan="4">
                    <mx:TextInput id="calculation"
                                  editable="false"
                                  textAlign="right"
                                  text="{regDisplay}"
                                  maxChars="30"
                                  width="100%"
                                  borderSkin="mx.skins.halo.HaloBorder"
                                  fontSize="14"
                                  fontWeight="bold" />
                </mx:GridItem>
		    </mx:GridRow>

            <mx:GridRow>
                <mx:GridItem>
                    <mx:Button label="MC"
                               click="performAction('MC');" />
                </mx:GridItem>
	
                <mx:GridItem>
                    <mx:Button label="M+"
                               click="performAction('M+');" />
                </mx:GridItem>

                <mx:GridItem>
                    <mx:Button label="M-"
                               click="performAction('M-');" />
                </mx:GridItem>

                <mx:GridItem>
                    <mx:Button label="MR"
                               click="performAction('MR');" />
                </mx:GridItem>

            </mx:GridRow>

            <mx:GridRow>
	            <mx:GridItem>
                    <mx:Button label="C"
                               id="clear"
                               click="performAction('C');" />
                </mx:GridItem>

                <mx:GridItem>
                    <mx:Button label="+/-"
                               click="performAction('F');" />
                </mx:GridItem>

                <mx:GridItem>
                    <mx:Button label="&lt;--"
                               id="undo"
                               click="performAction('U')" />
                </mx:GridItem>

                <mx:GridItem>
                    <mx:Button label="/"
                               id="opDiv"
                               click="performAction('/');" />
                </mx:GridItem>
            </mx:GridRow>

            <mx:GridRow>
                <mx:GridItem>
                    <mx:Button label="7"
                               id="num7"
                               click="performAction('7');" />
                </mx:GridItem>

                <mx:GridItem>
                    <mx:Button label="8"
                               id="num8"
                               click="performAction('8');" />
                </mx:GridItem>

                <mx:GridItem>
                    <mx:Button label="9"
                               id="num9"
                               click="performAction('9');" />
                </mx:GridItem>

                <mx:GridItem>
                    <mx:Button label="X"
                               id="opMul"
                               click="performAction('*');" />
                </mx:GridItem>
            </mx:GridRow>

            <mx:GridRow>
                <mx:GridItem>
                    <mx:Button label="4"
                               id="num4"
                               click="performAction('4');" />
                </mx:GridItem>

                <mx:GridItem>
                    <mx:Button label="5"
                               id="num5"
                               click="performAction('5');" />
                </mx:GridItem>

                <mx:GridItem>
                    <mx:Button label="6"
                               id="num6"
                               click="performAction('6');" />
                </mx:GridItem>

                <mx:GridItem>
                    <mx:Button label="-"
                               id="opSub"
                               click="performAction('-');" />
                </mx:GridItem>
            </mx:GridRow>

            <mx:GridRow>
                <mx:GridItem>
                    <mx:Button label="1"
                               id="num1"
                               click="performAction('1');" />
                </mx:GridItem>

                <mx:GridItem>
                    <mx:Button label="2"
                               id="num2"
                               click="performAction('2');" />
                </mx:GridItem>

                <mx:GridItem>
                    <mx:Button label="3"
                               id="num3"
                               click="performAction('3');" />
                </mx:GridItem>

				<mx:GridItem>
                    <mx:Button label="+"
                               id="opAdd"
                               click="performAction('+');" />
                </mx:GridItem>
            </mx:GridRow>

            <mx:GridRow>
                <mx:GridItem>
                    <mx:Button label="0"
                               id="num0"
                               click="performAction('0');" />
                </mx:GridItem>

                <mx:GridItem>
                    <mx:Button label="."
                               id="point"
                               click="performAction('.');" />
                </mx:GridItem>

                <mx:GridItem>
                    <mx:Button label="="
                               id="opEquals"
                               click="performAction('=');" />
                </mx:GridItem>
            </mx:GridRow>
        </mx:Grid>
    </mx:Panel>
</mx:Application>
